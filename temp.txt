Programming in Go
Its all about simplicity
2 Jan 2018

Vikash Kumar Singh
Sr. Engineer, Lowe's India
vikash.singh@lowes.com

* What is Go?


Go is often referred to as a “simple” programming language,
a language that can be learned in a few hours if you already know another language.

**  Where it shines?

: What are some of the reasons behind the popularity of Go? Why do developers feel that it makes programming fun again? Here are some of the key points

- Binaries
: Go generates binaries for your applications with all the dependencies built-in.
 This removes the need for you to install runtimes that are necessary for running your application.
 This eases the task of deploying applications and providing necessary updates across thousands of installations.
 With its support for multiple OS and processor architectures, this is a big win for the language.

 Language Design

: - In Go Language, “Do More with Less” is the mantra.
: It prefers Composition over Inheritance and its Type System is elegant
: and allows for behavior to be added without tight coupling the components too much.

- Powerful standard library

: Go comes with a powerful standard library, distributed as packages.
 This library caters to most components,
 libraries that developers have come to expect from 3rd party packages when it comes to other languages.

- Package Management

: Support is provided directly in the tooling to get external packages and publish your own packages in a set of easy commands.

- Static Typing

:  This can avoid the problems that one faces in dynamically typed languages, where you discover the issues only when the code is executed.
  static typed languages are those in which type checking is done at compile-time, whereas dynamic typed languages are those in which type checking is done at run-time.

- Concurrency Support
: If you have programming concurrency in other languages,
 you understand that it is quite complex to do so.
 Go Concurrency primitives via go routines and channels makes concurrent programming easy.

- Testing Support

: Go Language brings Unit Testing right into the language itself.
  It provides a simple mechanism to write your unit tests in parallel with your code.
 The tooling also provides support to understand code coverage by your tests,
 benchmarking tests and writing example code that is used in generating your code documentation.


* sdsd
